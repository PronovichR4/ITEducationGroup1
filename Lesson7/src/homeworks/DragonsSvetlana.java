package homeworks;

///идеально. Хотя доказательство неполное. Скорее хорошее убедительство. 
///Доказательство следует из утверждения индукции: "чтобы сохранить максимум произведения голов при добавлении
///ещё одной головы, её надо добавить к наменьшему из множителей. А наименьший множитель - это всегда
/// 1, 2 или 3. Т.к. 4 = 2*2"
public class DragonsSvetlana {

	public static void main(String[] args) {

		// n - количество голов в стае (минимум 2), pmax - максимальная сила
		// стаи драконов.

		double n = 22, pmax = 0;

		// n   pmax

		// 2   1 1
		// 3   1 2

		// 4   2 2
		// 5   2 3
		// 6   3 3

		// 7   2 2 3
		// 8   2 3 3
		// 9   3 3 3

		// 10  2 2 3 3
		// 11  2 3 3 3
		// 12  3 3 3 3

		// 13  2 2 3 3 3
		// 14  2 3 3 3 3
		// 15  3 3 3 3 3

		// 16  2 2 3 3 3 3
		// 17  2 3 3 3 3 3
		// 18  3 3 3 3 3 3

		// 19  2 2 3 3 3 3 3
		// 20  2 3 3 3 3 3 3
		// 21  3 3 3 3 3 3 3

		// Особые случаи, для которых дальнейшие формулы работают, но не совсем
		// корректны по смыслу. Ведь стая - это,как минимум, 2 дракона. Т. е.
		// один дракон с двумя головами обладает большей силой, чем два
		// одноголовых. Но если в стае только две головы и два дракона, то pmax
		// будет 1. Для трёх голов pmax будет 2.

		if (n == 2) {
			pmax = 1 * 1;
			System.out.println("Максимальная сила стаи " + (int) pmax);
		}
		if (n == 3) {
			pmax = 1 * 2;
			System.out.println("Максимальная сила стаи " + (int) pmax);
		}

		// Для n >= 4 ищем остаток от деления на 3. В зависимости от остатка,
		// вычисляем pmax по определённой формуле (формула выводится из
		// закономерности, которую можно рассмотреть в вышеприведённой
		// "лестнице".)
		// Если остаток = 1, то pmax = 4* 3^((n-4)/3).
		// Если остаток = 2, то pmax = 2* 3^((n-2)/3).
		// Если остаток = 0, то pmax = 3^(n/3).

		if (n >= 4) {
			if (n % 3 == 1) {
				pmax = 4 * Math.pow(3, (n - 4) / 3);
				System.out.println("Максимальная сила стаи " + (long) pmax);
			}
			if (n % 3 == 2) {
				pmax = 2 * Math.pow(3, (n - 2) / 3);
				System.out.println("Максимальная сила стаи " + (long) pmax);
			}
			if (n % 3 == 0) {
				pmax = Math.pow(3, n / 3);
				System.out.println("Максимальная сила стаи " + (long) pmax);
			}
		}
	}
}
